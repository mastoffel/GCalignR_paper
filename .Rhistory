phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
### #####################
### Get best parameters
### ###################
df <- data.frame(p2p = errors_bbim[["p2p"]], p2m = errors_bbim[["p2m"]], bbim = errors_bbim[["error"]],beph = errors_beph[["error"]], bfla = errors_bfla[["error"]])
x <- function(df) mean(df[3:5])
df[["mean"]] <- apply(df,1,FUN = x)
head(df)
# Best for mean error of all three
df[which(df[["mean"]] == min(df[["mean"]])),]
# best for bbim
df[which(df[["bbim"]] == min(df[["bbim"]])),]
df[which(df[["beph"]] == min(df[["beph"]])),]
df[which(df[["bfla"]] == min(df[["bfla"]])),]
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = ">",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 80)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
library(GCalignR)
library(ggplot2)
library(plot3D)
## Load data
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]],
p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]],
error_rate,"data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]],
p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]],
error_rate,"data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]],
p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]],
error_rate,"data/bfla_ms.txt"))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3)))
load("data/df.RData")
ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 12) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "Datasets",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = ">",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 80)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
library(GCalignR)
library(ggplot2)
library(plot3D)
## Load data
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]],
p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]],
error_rate,"data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]],
p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]],
error_rate,"data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]],
p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]],
error_rate,"data/bfla_ms.txt"))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3)))
errors_bbim
df <- data.frame(p2p = errors_bbim[["p2p"]], p2m = errors_bbim[["p2m"]], bbim = errors_bbim[["error"]],beph = errors_beph[["error"]], bfla = errors_bfla[["error"]])
x <- function(df) mean(df[3:5])
df[["mean"]] <- apply(df,1,FUN = x)
head(df)
df[which(df[["mean"]] == min(df[["mean"]])),]
df[which(df[["bbim"]] == min(df[["bbim"]])),]
df[which(df[["beph"]] == min(df[["beph"]])),]
df[which(df[["bfla"]] == min(df[["bfla"]])),]
df[which(df[["bbim"]] == min(df[["bbim"]])),]
df[which(df[["beph"]] == min(df[["beph"]])),]
df[which(df[["bfla"]] == min(df[["bfla"]])),]
df[which(df[["mean"]] == min(df[["mean"]])),]
df[which(df[["bbim"]] == min(df[["bbim"]])),]
df[which(df[["beph"]] == min(df[["beph"]])),]
df[which(df[["bfla"]] == min(df[["bfla"]])),]
df[which(df[["mean"]] == min(df[["mean"]])),]
View(df)
df[1,]
df <- data.frame(p2p = errors_bbim[["p2p"]],
p2m = errors_bbim[["p2m"]],
bbim = errors_bbim[["error"]],
beph = errors_beph[["error"]],
bfla = errors_bfla[["error"]])
df[["mean"]] <- apply(df[,3:5],1,mean)
head(df)
df[which(df[["mean"]] == min(df[["mean"]])),]
df[which(df[["bbim"]] == min(df[["bbim"]])),]
df[which(df[["beph"]] == min(df[["beph"]])),]
df[which(df[["bfla"]] == min(df[["bfla"]])),]
df[which(df[["bbim"]] == min(df[["bbim"]])),]
df[which(df[["beph"]] == min(df[["beph"]])),]
df[which(df[["bfla"]] == min(df[["bfla"]])),]
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
df[which(df[["mean"]] == min(df[["mean"]])),]
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 12) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
plot
ggsave(plot,filename = "data/noise_simulation.png",device = "png",dpi = 300,width = 6,height = 6,units = "in")
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 14) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
plot
ggsave(plot,filename = "data/noise_simulation.tif",device = "tiff",dpi = 300,width = 8,height = 8,units = "in")
gc_heatmap(aligned_peak_data,type = "discrete", substance_subset = 1:25, samples_subset = 1:25)
plot(aligned_peak_data)
?norm_peaks()
?norm_peaks
library(GCalignR)
?norm_peaks
## load the package
library(GCalignR)
## Path to the dataset
fpath <- system.file("extdata", "peak_data.txt", package = "GCalignR")
check_input(fpath)
print(aligned_peak_data)
plot(aligned_peak_data)
gc_heatmap(aligned_peak_data,type = "discrete", substance_subset = 1:25, samples_subset = 1:25)
data <- norm_peaks(data = aligned_peak_data,
rt_col_name = "time",
conc_col_name = "area",
out ="data.frame" )
data("peak_factors")
peak_factors
## load the package
library(GCalignR)
## Path to the dataset
fpath <- system.file("extdata", "peak_data.txt", package = "GCalignR")
check_input(fpath)
print(aligned_peak_data)
plot(aligned_peak_data)
gc_heatmap(aligned_peak_data,type = "discrete", substance_subset = 1:25, samples_subset = 1:25)
scent <- norm_peaks(data = aligned_peak_data,
rt_col_name = "time",
conc_col_name = "area",
out = "data.frame" )
library(vegan)
## factors for each sample of the chemical dataset
data("peak_factors")
## both datasets have the same rownames and can be sorted accordingly
scent <- scent[match(row.names(peak_factors),row.names(scent)),]
## NMDS using Bray-Curtis dissimilarities
scent_nmds <- vegan::metaMDS(comm = scent,distance = "bray")
## get the x and y coordinates
scent_nmds <- as.data.frame(scent_nmds$points)
## add the factor of interest
scent_nmds <- cbind(scent_nmds,colony = peak_factors[["colony"]])
