temp <- temp[!is.na(temp)]
x <- length(temp[temp != r[n]]) + x
}
### Error estimation
# The detection of errors in the alignment of gas-chromatography is not a trivial case. With the aid of additional information obtained by mass-spektrometry it is possible to detect errors in the grouping of substances that have been identified.
### Preparing data
rm(list = ls())
library(GCalignR)
# aligned data
load("ottensmann-stoffel-hoffman/Supplementary-A/data/beph_aligned.RData")
# linear shifts
shifts <- beph$Logfile$LinearShift$shift
beph <- beph$aligned$RT
# load ms-data and round retention times
beph_ms <- read.table("ottensmann-stoffel-hoffman/Supplementary-A/data/beph_ms.txt",sep = "\t",header = T)
beph_ms[,2:ncol(beph_ms)] <- round(beph_ms[,2:ncol(beph_ms)],digits = 2)
# format as lists
aligned <- as.list(beph[,2:ncol(beph)])
for (i in 1:length(aligned)) {
aligned[[i]][aligned[[i]] > 0] <- aligned[[i]][aligned[[i]] > 0] - shifts[i]
}
ms <- as.list(beph_ms[,3:ncol(beph_ms)])
## Match peaks to known substances
indices <- list()
# Select the rows that can be linked to known substances for each sample
for (i in 1:length(aligned)) {
indices <- append(indices,list(which(aligned[[i]] %in% ms[[i]])))
}
## get all rows
rows <- sort(unique(unlist(indices)))
## update the lists, discard rows that are not informative
fx <- function(x, rows) x[rows]
aligned <- lapply(aligned, fx,rows)
ms <- as.list(beph_ms[,3:ncol(beph_ms)])
merge <- beph[rows,2:ncol(beph)]
rownames(merge) <- 1:length(rownames(merge))
for (i in 1:length(ms)) { # All samples
for (n in 1:length(ms[[1]])) { # All substances
if (!is.na(ms[[i]][n])) merge[which(aligned[[i]] == ms[[i]][n]),i] <- as.character(beph_ms$Compounds[[n]])
}
}
### Step 2. Define correct row for each substance as the mode, function Mode()
library(MyFunctions)
fy <- function(x,y) {
if (any(x %in% y)) {
out <- which(x == y)
} else {
out <- NA
}
return(out)
}
# set 'correct' rows
r <- numeric(); x <- 0
for (n in 1:length(beph_ms$Compounds)) {
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if(any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
}
n
Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
temp
as.vector(temp)
beph_ms$Compounds[[n]]
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))[1]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))[[1]]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))[[1]][1]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))[[1]][[1]]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]][1]))[[1]][[1]]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]][1]))[[1]][[1]]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]][1:4]))[[1]][[1]]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))[[1]][[1]]
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
n
x <- merge$BEPH01
x
y <- x[6]
any(x %in% y)
which(x == y)
r <- numeric(); x <- 0
n <. 1
n <- 1
n
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if (any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
n<-2
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if (any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
n
n <- n+1
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if (any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
n
n <- 4
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if (any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
n <- 5
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if (any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
n <- 6
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
r
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp
as.character(beph_ms$Compounds[[n]])
apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
fy(merge$BEPH01,beph_ms$Compounds[[n]])
fy(merge$BEPH09,beph_ms$Compounds[[n]])
fy(merge$BEPH05,beph_ms$Compounds[[n]])
fy(merge$BEPH14,beph_ms$Compounds[[n]])
fy(merge$BEPH18,beph_ms$Compounds[[n]])
fy(merge$BEPH23,beph_ms$Compounds[[n]])
fy(merge$BEPH20,beph_ms$Compounds[[n]])
fy <- function(x,y) {
if (any(x %in% y)) {
out <- which(x == y)
} else {
out <- NA
}
return(out[1])
}
r <- numeric(); x <- 0
for (n in 1:length(beph_ms$Compounds)) {
r <- append(r, (Mode(apply(merge,2,fy,as.character(beph_ms$Compounds[[n]])))[[1]][[1]]))
temp <- apply(merge,2,fy,as.character(beph_ms$Compounds[[n]]))
temp <- temp[!is.na(temp)]
if (any(temp != r[n])) x <- length(temp[temp != r[n]]) + x
}
n
error <- x/(nrow(beph_ms) * ncol(beph_ms))
error
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_aligned.RData")
error_rate(bbim,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/beph_aligned.RData")
error_rate(beph,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/beph_ms.txt")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_aligned.RData")
error_rate(bfla,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
error_rate(bfla,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
ref <- read.table(Reference,sep = "\t",header = T)
View(ref)
ref[,2:ncol(ref)] <- round(ref[,2:ncol(ref)],digits = 2)
ncol(ref)
ncol(ref)
str(ref)
ref[,2:ncol(ref)] <- round(ref[,2:ncol(ref)],digits = 2)
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_aligned.RData")
error_rate(bbim,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/beph_aligned.RData")
error_rate(beph,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/beph_ms.txt")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_aligned.RData")
error_rate(bfla,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_aligned.RData")
error_rate(bfla,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_aligned.RData")
error_rate(bfla,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
library(GCalignR)
rm(list = ls())
library(GCalignR)
?align_chromatograms
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_aligned.RData")
plot(bbim)
load("ottensmann-stoffel-hoffman/Supplementary-A/data/beph_aligned.RData")
load("ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_aligned.RData")
plot(beph)
plot(bfla)
# Determine optimal alignment paramters by minimising errors
optimal_params < function(data,rt_col_name,conc_col_name,max_diff_peak2mean,min_diff_peak2peak) {
library(GCalignR)
out <- list()
for(i in 1:length(max_diff_peak2mean)) {
for (n in 1:length(min_diff_peak2peak)) {
out <- append(out,list(align_chromatograms(data = data,conc_col_name = conc_col_name,rt_col_name = rt_col_name,max_diff_peak2mean = max_diff_peak2mean[i],min_diff_peak2peak = min_diff_peak2peak[n],max_linear_shift = 0.01)))
}
}
}
# Determine optimal alignment paramters by minimising errors
optimal_params <- function(data,rt_col_name,conc_col_name,max_diff_peak2mean,min_diff_peak2peak) {
library(GCalignR)
out <- list()
for(i in 1:length(max_diff_peak2mean)) {
for (n in 1:length(min_diff_peak2peak)) {
out <- append(out,list(align_chromatograms(data = data,conc_col_name = conc_col_name,rt_col_name = rt_col_name,max_diff_peak2mean = max_diff_peak2mean[i],min_diff_peak2peak = min_diff_peak2peak[n],max_linear_shift = 0.01)))
}
}
}
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim.txt")
load("~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_aligned.RData")
bbim$Logfile$Call
optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.08, by = 0.01))
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.08, by = 0.01))
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim.txt",
max_diff_peak2mean = seq(from = 0.07, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.08, to = 0.08, by = 0.01))
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbfla.txt",
max_diff_peak2mean = seq(from = 0.07, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.08, to = 0.08, by = 0.01))
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.07, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.08, to = 0.08, by = 0.01))
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.07, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.08, to = 0.08, by = 0.01))
out
str(out)
plot(out[1])
plot(out[[1]])
plot(out[[2]])
plot(out[[1]])
names(out)
out[[1]]
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.07, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.08, to = 0.08, by = 0.01))
max_diff_peak2mean
min_diff_peak2peak
a <- c(0.01,0.02,0.03)
b <- c(0.01,0.02)
a*b
names <- character()
names
names <- c(names,paste0("d_","p2m_",as.character(i),"p2p_",as.character(n)))
i
i <- 1
n <- 3
paste0("d_","p2m_",as.character(i),"p2p_",as.character(n))
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.07, to = 0.08,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.08, to = 0.08, by = 0.01))
out$d_p2m_1_p2p_1
rm(list = ls())
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
out <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.1,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.2, by = 0.01))
save(out, file = "Parameter_Optimising.RData")
load("~/GitHub/GCalignR_paper/Parameter_Optimising.RData")
288.8/288
(288.8/288) * 100
100 - (288.8/288) * 100
15.65 -14.85
15.65/14.85
(288.8/288)
1-(288.8/288)
(288.8/288)-1
((288.8/288)-1)*100
288-273.15
288.8-273.15
((15.65/14.85)-1)*100
(((288.8-273.15)/(288-273.15))-1)*100
288.8-273.15
rm(list = ls())
load("~/GitHub/GCalignR_paper/Parameter_Optimising.RData")
plot(out$d_p2m_1_p2p_1)
rm(list = ls())
library(GCalignR)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
load("~/GitHub/GCalignR_paper/Parameter_Optimising.RData")
plot(out$d_p2m_1_p2p_1)
data_list <- out
errors <- lapply(X = data_list,error_rate,Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt" )
errors <- lapply(X = data_list,error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
error_rate(out$d_p2m_1_p2p_1,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
error_rate(GCalignObject = out$d_p2m_1_p2p_1,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
GCalignObject = out$d_p2m_1_p2p_1
plot(GCalignObject)
plot(GCalignObject)
GCalignObject = out$d_p2m_1_p2p_1
error_rate(GCalignObject = out$d_p2m_1_p2p_1,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
error_rate(GCalignObject = out$d_p2m_1_p2p_1,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
shifts
GCalignObject$aligned$RT
GCalignObject[["Logfile"]][["Call"]][["rt_col_name"]]]
GCalignObject[["Logfile"]][["Call"]][["rt_col_name"]]
GCalignObject[["Logfile"]][["Call"]]
GCalignObject[["Logfile"]][["Call"]]
GCalignObject[["Logfile"]][["Call"]][["RT"]]
GCalignObject[["aligned"]]
GCalignObject[["aligned"]][["RT"]]
rm(list = ls())
library(GCalignR)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
load("~/GitHub/GCalignR_paper/Parameter_Optimising.RData")
data_list <- out
errors <- lapply(X = data_list,error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
error
errors
which(errors == min(errors))
x <- unlist(errors)
x
which(x == min(x))
seq(from = 0.01, to = 0.1,by=0.01)[4]
seq(from = 0.01, to = 0.2, by = 0.01)[12]
0.12*60
params <- matrix(NA, nrow = length(max_diff_peak2mean)*length(min_diff_peak2peak),ncol = 2)
rm(list = ls())
library(GCalignR)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
results <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.02,by=0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.5, by = 0.01))
rm(list = ls())
library(GCalignR)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
results <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.02,by = 0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.15, by = 0.01))
str(results)
results[[1]]
results[2]
load("~/GitHub/GCalignR_paper/Parameter_Optimising.RData")
save(resutls,"~/GitHub/GCalignR_paper/results.RData")
save(results,"~/GitHub/GCalignR_paper/results.RData")
save(results,file = "~/GitHub/GCalignR_paper/results.RData")
errors <- lapply(X = results[1],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
errors <- lapply(X = results[1],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
ncol(rt)
rt
names(GCalignObject)
length(results[1])
length(results[[1]])
errors <- lapply(X = results[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
aligned <- as.list(rt[,2:ncol(rt)])
errors <- lapply(X = results[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt")
errors <- unlist(lapply(X = results[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt"))
errors <- data.frame(p2p = results[[2]][["p2p"]],p2m = results[[2]][["p2m"]])
errors <- data.frame(p2p = results[[2]][["p2p"]],p2m = results[[2]][["p2m"]])
errors[["error"]] <- unlist(lapply(X = results[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt"))
head(errors)
rm(list = ls())
library(GCalignR)
library(ggplot2)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
load("~/GitHub/GCalignR_paper/results.RData")
errors <- data.frame(p2p = results[[2]][["p2p"]],p2m = results[[2]][["p2m"]])
errors[["error"]] <- unlist(lapply(X = results[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt"))
plot_1 <- ggplot(errors, aes(x = p2p, y = p2m)) +
geom_point() +
background_grid(minor = 'none',major = 'none') +
labs(y = "",x = "") + theme_bw() +
theme(axis.text = element_text(colour = "black",hjust = 0.5,size = 9),
axis.title = element_text(colour = "black",hjust = 0.5,size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size = 1.5),
axis.ticks.x = element_line(colour = "white"))
plot_1 <- ggplot(errors, aes(x = p2p, y = p2m)) +
geom_point() +
#background_grid(minor = 'none',major = 'none') +
labs(y = "",x = "") + theme_bw() +
theme(axis.text = element_text(colour = "black",hjust = 0.5,size = 9),
axis.title = element_text(colour = "black",hjust = 0.5,size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size = 1.5),
axis.ticks.x = element_line(colour = "white"))
plot_1
install.packages("plotly")
library(plotly)
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
p
head(errors)
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error)
errors$p2m
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error)
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error)%>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Peak2Peak'),
yaxis = list(title = 'Peak2Mean'),
zaxis = list(title = 'Misaligned peaks [%]')))
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error, color = ~error)%>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Peak2Peak'),
yaxis = list(title = 'Peak2Mean'),
zaxis = list(title = 'Misaligned peaks [%]')))
# Determination of optimal parameters by error-rate estimation
rm(list = ls())
library(GCalignR)
library(ggplot2)
library(plotly)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
### Vary alignment parameters
#############################
results <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.05,by = 0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.2, by = 0.01))
save(results,file = "~/GitHub/GCalignR_paper/results.RData")
#############################
### Load data
load("~/GitHub/GCalignR_paper/results.RData")
### #########
### Calculate error rates
errors <- data.frame(p2p = results[[2]][["p2p"]],p2m = results[[2]][["p2m"]])
errors[["error"]] <- unlist(lapply(X = results[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt"))
### #####################
### Plot error rates
plot_1 <- ggplot(errors, aes(x = p2p, y = p2m)) +
geom_point() +
#background_grid(minor = 'none',major = 'none') +
labs(y = "",x = "") + theme_bw() +
theme(axis.text = element_text(colour = "black",hjust = 0.5,size = 9),
axis.title = element_text(colour = "black",hjust = 0.5,size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size = 1.5),
axis.ticks.x = element_line(colour = "white"))
#+  scale_y_continuous(breaks = seq(0,1,0.1), labels = seq(0,1,0.1))
plot_1
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error, color = ~error)%>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Peak2Peak'),
yaxis = list(title = 'Peak2Mean'),
zaxis = list(title = 'Misaligned peaks [%]')))
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error*100, color = ~error, colors = c("green","blue"))%>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Peak2Peak'),
yaxis = list(title = 'Peak2Mean'),
zaxis = list(title = 'Misaligned peaks [%]')))
plot_ly(data = errors,x = ~p2p, y= ~p2m, z = ~error*100, color = ~error*100, colors = c("green","blue"))%>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Peak2Peak'),
yaxis = list(title = 'Peak2Mean'),
zaxis = list(title = 'Misaligned peaks [%]')))
rm(list = ls())
library(GCalignR)
library(ggplot2)
library(plotly)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
rm(list = ls())
library(GCalignR)
library(ggplot2)
library(plotly)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
### Vary alignment parameters
#############################
results_bfla <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.05,by = 0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.2, by = 0.01))
# Determination of optimal parameters by error-rate estimation
rm(list = ls())
library(GCalignR)
library(ggplot2)
library(plotly)
source("ottensmann-stoffel-hoffman/Supplementary-A/R/optimal_params.R")
source("ottensmann-stoffel-hoffman/Supplementary-A/R/error_rate.R")
### Vary alignment parameters
#############################
results_bfla <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bfla.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.05,by = 0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.2, by = 0.01))
save(results_bfla,file = "~/GitHub/GCalignR_paper/results_bfla.RData")
results_bbim <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.05,by = 0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.2, by = 0.01))
save(results_bbim,file = "~/GitHub/GCalignR_paper/results_bbim.RData")
results_beph <- optimal_params(data = "ottensmann-stoffel-hoffman/Supplementary-A/data/beph.txt",
max_diff_peak2mean = seq(from = 0.01, to = 0.05,by = 0.01),rt_col_name = "RT",conc_col_name = "Area",min_diff_peak2peak = seq(from = 0.01, to = 0.2, by = 0.01))
save(results_beph,file = "~/GitHub/GCalignR_paper/results_beph.RData")
#############################
rm(list = ls())
load("~/GitHub/GCalignR_paper/results_bbim.RData")
load("~/GitHub/GCalignR_paper/results_beph.RData")
load("~/GitHub/GCalignR_paper/results_bfla.RData")
### #########
### Calculate error rates
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]],p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]],p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]],p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]],error_rate,"ottensmann-stoffel-hoffman/Supplementary-A/data/bfla_ms.txt"))
