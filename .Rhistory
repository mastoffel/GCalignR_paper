a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red"),
name="Breeding colony",
breaks=c("SSB", "FWB"),
labels=c("Special study beach",
"Freshwater beach")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1,legend.justification=c(0,0),
legend.position=c(0.01,0.01),
legend.title = element_text(size=12, face="bold"),
legend.background = element_rect(color = "black",
fill = NA, size = 1,
linetype = "solid"))
ggsave(a,filename = "Fig5.tif",device = "tiff",width = 5,height = 5,units = "in")
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = "#>",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 55)
library(GCalignR)
library(ggplot2)
library(gtable)
library(vegan)
### source functions
source("R/ChromaSimFunctions.R")
source("R/NMDS-Functions.R")
source("R/ggplot_dual_axis.R")
source("R/ggplot_shared_x_axis.R")
## input data
chromas <- aligned_peak_data[["input_list"]]
sim_zero <- align_chromatograms(data = chromas,rt_col_name = "time",max_linear_shift = 0.02,rt_cutoff_low = 8,blanks = c("C2","C3"))
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = "#>",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 55)
library(GCalignR)
library(ggplot2)
library(gtable)
library(vegan)
### source functions
source("R/ChromaSimFunctions.R")
source("R/NMDS-Functions.R")
source("R/ggplot_dual_axis.R")
source("R/ggplot_shared_x_axis.R")
## simulated data
load("data/seal_simulations.RData")
## extract data
aligned <- seal_simulations[["SimAlign"]]
## covariates
data("peak_factors")
covars <- peak_factors
scent <- lapply(aligned, scent_extract,covars = covars) # get the scent, normalised and log+1 transformed
save(x = scent,file = "data/scent.RData")
scent_mds <- lapply(scent, myMetaMDS, covars) # MDS using vegan::metaMDS
## load the results of nmds, and the scent data
load(file = "data/scent_mds.RData")
load(file = "data/scent.RData")
load(file = "data/scent_adonis_colony.RData")
load(file = "data/seal_simulations.RData")
noise <- factor(seal_simulations[["noise"]])
r2 <- unlist(lapply(scent_adonis_colony, function(x) x[["aov.tab"]][["R2"]][1]))
p.val <- unlist(lapply(scent_adonis_colony, function(x) x[["aov.tab"]][["Pr(>F)"]][1]))
peaks <- unlist(lapply(seal_simulations[["SimAlign"]],function(x) x[["Logfile"]][["Aligned"]][["retained"]]))
df <- data.frame(noise, r2, p.val, peaks)
p1 <- ggplot(df, aes(noise, peaks)) +
geom_smooth(size = 1.5,se = T,colour = "blue",aes(group = 1)) +
geom_boxplot(fill = "blue",alpha = .3,size = 0.1,weight = 1) +
labs(y = "Number of substances")  +
scale_y_continuous(breaks = seq(200,280,10)) +
theme_bw(base_family = "sans",base_size = 14) +
theme(aspect.ratio = 0.5,
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(0,13,0,0)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- ggplot(df, aes(noise, r2)) +
geom_smooth(size = 1.5,se = T,colour = "red",aes(group = 1)) +
geom_boxplot(fill = "red",alpha = .3,size = 0.1,weight = 1) +
labs(y = "Adonis RÂ²",x = "Additional noise level")  +
theme_bw(base_family = "sans",base_size = 14) +
scale_y_continuous(breaks = seq(0,0.2,0.025)) +
theme(aspect.ratio = 0.5,
axis.title.y = element_text(margin = margin(0,13,0,0)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
grid::grid.draw(rbind(ggplotGrob(p1), ggplotGrob(p2), size = "first"))
grid::grid.draw(rbind(ggplotGrob(p1), ggplotGrob(p2), size = "first"))
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = "#>",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 55)
library(GCalignR)
library(ggplot2)
library(plot3D)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
## Load data
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]], p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]], error_rate,"data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]], p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]], error_rate,"data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]], p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]], error_rate,"data/bfla_ms.txt"))
knitr::include_graphics("figures/parameter_space.png")
load("data/bbim_zero.RData")
load("data/beph_zero.RData")
load("data/bfla_zero.RData")
bfla_chroma <- lapply(bfla_zero[["input_list"]],na.remove) # remove NAs
bbim_chroma <- lapply(bbim_zero[["input_list"]],na.remove) # remove NAs
beph_chroma <- lapply(beph_zero[["input_list"]],na.remove) # remove NAs
load("data/bfla_simulations.RData")
load("data/beph_simulations.RData")
load("data/bbim_simulations.RData")
## set up data frames
bfla <- data.frame(data.frame(noise = bfla_simulations[["noise"]]))
bbim <- data.frame(data.frame(noise = bbim_simulations[["noise"]]))
beph <- data.frame(data.frame(noise = beph_simulations[["noise"]]))
## calculate errors
bfla[["error"]] <- unlist(lapply(X = bfla_simulations[["SimAlign"]],
error_rate, Reference = "data/bfla_ms.txt",
rt_col_name = "RT", linshift = FALSE))
bbim[["error"]] <- unlist(lapply(X = bbim_simulations[["SimAlign"]],
error_rate, Reference = "data/bbim_ms.txt",
rt_col_name = "RT", linshift = FALSE))
beph[["error"]] <- unlist(lapply(X = beph_simulations[["SimAlign"]],
error_rate, Reference = "data/beph_ms.txt",
rt_col_name = "RT",linshift = FALSE))
## Combine data into one data frame
df <- rbind(bbim,bfla,beph)
df[["id"]] <- rep(c("bbim","bfla","beph"),each = nrow(df)/3)
save(df,file = "data/df.RData")
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id, fill = id)) +
geom_smooth(level = 0.95, size = 1.5, alpha = 0.2) +
theme_bw(base_size = 14, base_family = "sans") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
legend.justification = c(0,0),
legend.position = c(0.7,0.02),
legend.background = element_rect(color = "black",fill = NA)) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,0.3,0.02), expand = c(0,0)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "Bumblebee datasets",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 12))) +
scale_fill_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "Bumblebee datasets",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 12)))
getwd()
setwd(ottensmann-stoffel-hoffman/Supplementary/data)
setwd("ottensmann-stoffel-hoffman/Supplementary/data")
getwd()
library(GCalignR)
peak_interspace("bfla.txt")
peak_interspace("bfla.txt",rt_col_name = "rt")
peak_interspace("bfla.txt",rt_col_name = "Rt")
peak_interspace("bfla.txt",rt_col_name = "RT")
peak_interspace("bfla.txt",rt_col_name = "RT")
peak_interspace("bfla.txt",rt_col_name = "RT")
peak_interspace("bbim.txt",rt_col_name = "RT")
peak_interspace("beph.txt",rt_col_name = "RT")
peak_interspace("beph.txt",rt_col_name = "RT")
peak_interspace("bfla.txt",rt_col_name = "RT")
peak_interspace("bbim.txt",rt_col_name = "RT")
library(GCalignR) # loads the package
fpath <- system.file(dir = "extdata",
file = "peak_data.txt",
package = "GCalignR") # path to peak_data.txt
check_input(fpath) # checks the data
print(aligned_peak_data) # verbal summary of the alignment procedure
scent <- norm_peaks(data = aligned_peak_data,
rt_col_name = "time", # retention times
conc_col_name = "area", # peak area
out = "data.frame" ) # returns a data frame
scent <- scent[match(row.names(peak_factors),
row.names(scent)),] # sort data
scent <- log(scent + 1) # log + 1 transformation
scent_nmds <- vegan::metaMDS(comm = scent,distance = "bray") # NMDS
scent_nmds <- as.data.frame(scent_nmds[["points"]]) # extract points
scent_nmds <- cbind(scent_nmds,
colony = peak_factors[["colony"]]) # add factors
library(ggplot2) # load package ggplot2
ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red"),
name="Breeding colony",
breaks=c("SSB", "FWB"),
labels=c("Special study beach",
"Freshwater beach")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1,legend.justification=c(0,0),
legend.position=c(0.01,0.01),
legend.title = element_text(size=12, face="bold"),
legend.background = element_rect(color = "black",
fill = NA, size = 1,
linetype = "solid"))
ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red"),
name="Breeding colony",
breaks=c("SSB", "FWB"),
labels=c("Special study beach",
"Freshwater beach")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1)
ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1)
ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1)
ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1,
legend.position = "none")
ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1,
legend.position = "none")
ggsave(a,filename = "Fig5.tif",device = "tiff",width = 5,height = 5,units = "in")
a<-ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black",
size = 1.5,fill = NA),
aspect.ratio = 1,
legend.position = "none")
ggsave(a,filename = "Fig5.tif",device = "tiff",width = 5,height = 5,units = "in")
plot_1 <- plot(x = aligned_peak_data, which_plot ="peak_num",cex.lab = 1.5,cex.names = 0.8)
library(GCalignR)
plot_1 <- plot(x = aligned_peak_data, which_plot ="peak_num",cex.lab = 1.5,cex.names = 0.8)
library(GCalignR)
plot_1 <- plot(x = aligned_peak_data, which_plot ="peak_num",cex.lab = 1.5,cex.names = 0.8)
library(ggplot2)
library(GCalignR)
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05)
a + theme(plot.background = element_rect(fill = "white"))
a
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05)
a <- a + theme(plot.background = element_rect(fill = "white"))
library(ggplot2)
library(GCalignR)
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05)
a <- a + theme(plot.background = element_rect(fill = "white"))
a
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05,main_title = "")
a <- a + theme(plot.background = element_rect(fill = "white"))
a
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/heatmap.tiff",width = 10,height = 10,units = "in",dpi = 300)
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/heatmap.tiff",width = 8,height = 5,units = "in",dpi = 300)
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/heatmap.tiff",width = 6,height = 5,units = "in",dpi = 300)
library(ggplot2)
library(GCalignR)
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05,main_title = "")
a <- a + theme(plot.background = element_rect(fill = "white"))
a
library(GCalignR) # loads the package
fpath <- system.file(dir = "extdata",
file = "peak_data.txt",
package = "GCalignR") # path to peak_data.txt
check_input(fpath) # checks the data
print(aligned_peak_data) # verbal summary of the alignment procedure
scent <- norm_peaks(data = aligned_peak_data,
rt_col_name = "time", # retention times
conc_col_name = "area", # peak area
out = "data.frame" ) # returns a data frame
scent <- scent[match(row.names(peak_factors),
row.names(scent)),] # sort data
scent <- log(scent + 1) # log + 1 transformation
scent_nmds <- vegan::metaMDS(comm = scent,distance = "bray") # NMDS
scent_nmds <- as.data.frame(scent_nmds[["points"]]) # extract points
scent_nmds <- cbind(scent_nmds,
colony = peak_factors[["colony"]]) # add factors
library(ggplot2)
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red"),
name="Breeding colony",
breaks=c("SSB", "FWB"),
labels=c("Special study beach",
"Freshwater beach")) +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),aspect.ratio = 1,legend.justification=c(0,0), legend.position=c(0.01,0.01), legend.title = element_text(size=12, face="bold"),legend.background = element_rect(color = "black",fill = NA, size = 1, linetype = "solid"))
a
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red"),
name="Breeding colony",
breaks=c("SSB", "FWB"),
labels=c("Special study beach",
"Freshwater beach")) +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),
aspect.ratio = 1, legend.position = "none")
a
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red") +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),
aspect.ratio = 1, legend.position = "none")
a
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/ordiplot.png",width = 5,height = 5,units = "in",dpi = 300)
## Heatmap
library(ggplot2)
library(GCalignR)
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05,main_title = "")
a <- a + theme(plot.background = element_rect(fill = "white"))
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/heatmap.tiff",width = 6,height = 5,units = "in",dpi = 300)
## diagnostic plots
library(GCalignR)
# 1500 x 500
plot_1 <- plot(x = aligned_peak_data, which_plot ="peak_num",cex.lab = 1.5,cex.names = 0.8)
# 500 x 500
plot_2 <- plot(x = aligned_peak_data, which_plot ="shifts",cex.lab = 1.5,cex.names = 0.8)
plot_3 <- plot(x = aligned_peak_data, which_plot ="variation",cex.lab = 1.5,cex.names = 0.8)
plot_4 <- plot(x = aligned_peak_data, which_plot ="peaks_s",cex.lab = 1.5,cex.names = 0.8)
## Simualtion
# 1000x1000px
with(errors_bbim,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
xlab = "",
ylab = "",
zlab = "",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.axis = 1,
zlim = c(0,0.2)))
with(errors_beph,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
xlab = "",
ylab = "",
zlab = "",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.axis = 1,
zlim = c(0,0.2)))
with(errors_bfla,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
xlab = "",
ylab = "",
zlab = "",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.axis = 1,
zlim = c(0,0.2)))
library(ggplot2)
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red") +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),
aspect.ratio = 1, legend.position = "none")
a
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/ordiplot.png",width = 5,height = 5,units = "in",dpi = 300)
## Heatmap
library(ggplot2)
library(GCalignR)
a <- gc_heatmap(aligned_peak_data,type = "binary",threshold = 0.05,main_title = "")
a <- a + theme(plot.background = element_rect(fill = "white"))
ggplot2::ggsave(a,filename = "ottensmann-stoffel-hoffman/figures/heatmap.tiff",width = 6,height = 5,units = "in",dpi = 300)
## diagnostic plots
library(GCalignR)
# 1500 x 500
plot_1 <- plot(x = aligned_peak_data, which_plot ="peak_num",cex.lab = 1.5,cex.names = 0.8)
# 500 x 500
plot_2 <- plot(x = aligned_peak_data, which_plot ="shifts",cex.lab = 1.5,cex.names = 0.8)
plot_3 <- plot(x = aligned_peak_data, which_plot ="variation",cex.lab = 1.5,cex.names = 0.8)
plot_4 <- plot(x = aligned_peak_data, which_plot ="peaks_s",cex.lab = 1.5,cex.names = 0.8)
## Simualtion
# 1000x1000px
with(errors_bbim,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
xlab = "",
ylab = "",
zlab = "",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.axis = 1,
zlim = c(0,0.2)))
with(errors_beph,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
xlab = "",
ylab = "",
zlab = "",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.axis = 1,
zlim = c(0,0.2)))
with(errors_bfla,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
xlab = "",
ylab = "",
zlab = "",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.axis = 1,
zlim = c(0,0.2)))
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point(size = 2) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),
aspect.ratio = 1, legend.position = "none")
a
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),
aspect.ratio = 1, legend.position = "none")
a
a <- ggplot(data = scent_nmds,aes(MDS1,MDS2,color = colony)) +
geom_point() +
theme_void() +
scale_color_manual(values = c("blue","red")) +
theme(panel.background = element_rect(colour = "black", size = 1.25,fill = NA),
aspect.ratio = 1, legend.position = "none")
a
