install_packages("mastoffel/GCalignR")
library(devtools)
install_packages("mastoffel/GCalignR")
install_github("mastoffel/GCalignR")
install.packages("devtools") devtools::install_github("mastoffel/GCalignR",
build_vignettes = TRUE)
install.packages("devtools") devtools::install_github("mastoffel/GCalignR",
build_vignettes = TRUE)
install.packages("devtools")
devtools::install_github("mastoffel/GCalignR",build_vignettes = TRUE)
library(GCalignR)
?GCalignR
library(GCalignR)
?GCalignR
# Chunk 1
# devtools::install_github("cboettig/knitcitations@v1")
library(knitcitations)
cleanbib()
cite_options(citation_format = "pandoc", check.entries=FALSE)
library(bibtex)
# Chunk 2
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", cache = TRUE) # warning = FALSE
# Chunk 3
data("peak_data")
# Chunk 4
check_input(data = peak_data,show_peaks = F) # If show_peaks = T, a histogram of peaks is plotted
# Chunk 6
data("aligned_peak_data")
# Chunk 7
library(ggplot2)
library(gridExtra)
grid.arrange(p1, p2, p3, widths=c(0.33, 0.33, 0.33))
library(GCalignR)
# Chunk 1
# devtools::install_github("cboettig/knitcitations@v1")
library(knitcitations)
cleanbib()
cite_options(citation_format = "pandoc", check.entries=FALSE)
library(bibtex)
# Chunk 2
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", cache = TRUE) # warning = FALSE
# Chunk 3
library(GCalignR)
data("peak_data")
# Chunk 4
check_input(data = peak_data,show_peaks = F) # If show_peaks = T, a histogram of peaks is plotted
# Chunk 6
data("aligned_peak_data")
# Chunk 7
library(ggplot2)
library(gridExtra)
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01) # By default a threshold of 0.05 is used to mark deviations
p2 <- gc_heatmap(aligned_peak_data,threshold = 0.02)
p3 <- gc_heatmap(aligned_peak_data,threshold = 0.04)
grid.arrange(p1, p2, p3, widths=c(0.33, 0.33, 0.33))
?gc_heatmap
gc_heatmap(aligned_peak_data,threshold = 0.01, type = "continuous")
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, type = "continous") # By default a threshold of 0.05 is used to mark deviations
p1
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, substance_subset = 1:10) # By default a threshold of 0.05 is used to mark deviations
p1
gc_heatmap(aligned_peak_data,threshold = 0.01, substance_subset = 1:10, samples_subset = 1:10)
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, substance_subset = 1:10, samples_subset = 1:10, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p2 <- gc_heatmap(aligned_peak_data,threshold = 0.02)
p1
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:10, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p1
gc_heatmap(aligned_peak_data,threshold = 0.01, label_size = 10)
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.02, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p1
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.02, samples_subset = 1:20, substance_subset = 1:20, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p1
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 1:20, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p1
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 30:50, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p1
gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 20:50, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 1:50, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p2 <- gc_heatmap(aligned_peak_data,threshold = 0.03, samples_subset = 1:20, substance_subset = 1:50, label_size = 10)
p2
grid.arrange(p1, p2, widths=c(0.5, 0.5))
gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 1:50, label_size = 10)
gc_heatmap(aligned_peak_data,threshold = 0.03, samples_subset = 1:20, substance_subset = 1:50, label_size = 10)
grid.arrange(p1, p2, widths=c(0.5, 0.5))
p1 <- gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 1:50, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
p2 <- gc_heatmap(aligned_peak_data,threshold = 0.03, samples_subset = 1:20, substance_subset = 1:50, label_size = 10)
grid.arrange(p1, p2, widths=c(0.5, 0.5))
?check_input
check_input(data = peak_data,show_peaks = T) # If show_peaks = T, a histogram of peaks is plotted
check_input(data = peak_data,show_peaks = T, color = "red") # If show_peaks = T, a histogram of peaks is plotted
check_input(data = peak_data,show_peaks = T, color = "red") # If show_peaks = T, a histogram of peaks is plotted
warnings()
check_input(data = peak_data,show_peaks = T, colour = "red") # If show_peaks = T, a histogram of peaks is plotted
check_input(data = peak_data,show_peaks = T, col= "red") # If show_peaks = T, a histogram of peaks is plotted
test <- check_input(data = peak_data,show_peaks = T, col= "red") # If show_peaks = T, a histogram of peaks is plotted
test
?gc_heatmap
gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 1:30, label_size = 10) # By default a threshold of 0.05 is used to mark deviations
gc_heatmap(aligned_peak_data,threshold = 0.01, samples_subset = 1:20, substance_subset = 1:30, label_size = 10, type = "continous") # By default a threshold of 0.05 is used to mark deviations
```
?`GCalignR-package`
install.packages("pander")
library(GCalignR)
# Seal scent data
data("peak_data")
# Data is organized in one list of data.frames
str(peak_data[1:2])
check_input(peak_data)
#> All checks passed!
#> Ready for processing with align_chromatograms
library(GCalignR)
seal_aligned <- aligned_peak_data
print(seal_aligned)
print(seal_aligned)
plot(seal_aligned)
install.packages("rticles")
install.packages("rticles")
