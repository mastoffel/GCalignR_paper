bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
rm(list = ls())
library(knitr)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>",cache = FALSE,
fig.width = 7, fig.height = 7) # warning = FALSE
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
library(GCalignR)
library(plot3D)
## Datasets have been saved previously by running the code chunk above
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]],p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]],error_rate,"data/bbim_ms.txt"))
GCalignObject <- results_bbim[[1]]
rt_col_name = "RT"
Reference = "data/bbim_ms.txt"
Mode <- function(x, na.rm = TRUE) {
if (isTRUE(na.rm)) {
ux <- unique(x[!is.na(x)])
x <- x[!is.na(x)]
} else {
ux <- unique(x)
}
return(ux[which.max(tabulate(match(x, ux)))])
}
rt <- GCalignObject[["aligned"]][[rt_col_name]]
rt
GCalignObject <- results_bbim[[1]][[1]]
rt <- GCalignObject[["aligned"]][[rt_col_name]]
rt
ref <- read.table(Reference,sep = "\t",header = T)
Reference
ref <- read.table(Reference,sep = "\t",header = T)
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
rt <- GCalignObject[["aligned"]][[rt_col_name]]
rt
ref <- read.table(Reference,sep = "\t",header = T)
ref[,2:ncol(ref)] <- round(ref[,2:ncol(ref)],digits = 2)
aligned <- as.list(round(rt[,2:ncol(rt)],2))
isTRUE(linshift)
shifts <- GCalignObject[["Logfile"]][["LinearShift"]][["shift"]]
shifts
i <- 1
aligned[[i]][aligned[[i]] > 0] - shifts[i]
for (i in 1:length(aligned)) {
aligned[[i]][aligned[[i]] > 0] <- aligned[[i]][aligned[[i]] > 0] - shifts[i]
}
ms <- as.list(ref[,3:ncol(ref)])
ms
i <- 1
indices <- list()
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
indices
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i <- 12
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
rt <- GCalignObject[["aligned"]][[rt_col_name]]
ref <- read.table(Reference,sep = "\t",header = T)
ref[,2:ncol(ref)] <- round(ref[,2:ncol(ref)],digits = 2)
aligned <- as.list(round(rt[,2:ncol(rt)],2))
if (isTRUE(linshift)) {
# Obtain linear shifts that have been applied to retention times during alignment
shifts <- GCalignObject[["Logfile"]][["LinearShift"]][["shift"]]
for (i in 1:length(aligned)) {
aligned[[i]][aligned[[i]] > 0] <- aligned[[i]][aligned[[i]] > 0] - shifts[i]
}
}
indices <- list()
for (i in 1:length(aligned)) {
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
}
rows <- sort(unique(unlist(indices)))
indices <- list()
for (i in 1:length(aligned)) {
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
}
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices
rows <- sort(unique(unlist(indices)))
fx <- function(x, rows) x[rows]
aligned <- lapply(aligned, fx,rows)
ms <- as.list(ref[,3:ncol(ref)])
merge <- rt[rows,2:ncol(rt)]
rownames(merge) <- 1:length(rownames(merge))
for (i in 1:length(ms)) { # All samples
for (n in 1:length(ms[[1]])) { # All substances
if (!is.na(ms[[i]][n])) merge[which(aligned[[i]] == ms[[i]][n]),i] <- as.character(ref[["Compounds"]][[n]])
}
}
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
temp <- unlist((ref[1:nrow(ref),3:ncol(ref)]))
temp
N <- length(temp[!is.na(temp) & temp > 0])
N
length(unlist(indices))
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices <- list()
i <- 1
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i <-2
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i
i <- i + 1
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i <- i + 1
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i <- i + 1
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i <- i + 1
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i
aligned$BBIM06
aligned$BBIM06[1:10]
aligned$BBIM06[aligned$BBIM06 > 0][1:10]
shifts
aligned$BBIM06[aligned$BBIM06 > 0][1:10]
ms$BBIM06[1:10]
aligned$BBIM06[aligned$BBIM06 > 0]
ms$BBIM06
i
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
which(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0] %in% aligned[[i]])
ms[[i]][ms[[i]] > 0 & !is.na(ms[[i]])]
length(ms[[i]][ms[[i]] > 0 & !is.na(ms[[i]])])
any(ms[[i]][ms[[i]] >0 & !is.na(ms[[i]])] %in% aligned[[i]])
all(ms[[i]][ms[[i]] >0 & !is.na(ms[[i]])] %in% aligned[[i]])
which(ms[[i]][ms[[i]] >0 & !is.na(ms[[i]])] %in% aligned[[i]])
ms[[i]]
aligned[[i]][aligned[i]>0]
aligned[[i]][aligned[[i]]>0]
ms[[i]]
aligned[[i]][aligned[[i]]>0]
which(aligned[[i]][aligned[[i]]>0] !(%in% ms[[i]]))
which(aligned[[i]][aligned[[i]]>0] %in% ms[[i]]))
which(aligned[[i]][aligned[[i]]>0] %in% ms[[i]])
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices <- list()
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
i <- 1
indices <- list()
for (i in 1:length(aligned)) {
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
i <- i + 1
}
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices <- list()
i <- 1
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices <- list()
i <- 6
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
aligned[[i]]
aligned[[i]][aligned[[i]]>0]
ms[[i]]
aligned[[i]][9]
aligned[[i]][aligned[[i]]>0][9]
aligned[[i]][aligned[[i]]>0][9]
ms[[i]][ms[[i]]>0][5]
ms[[i]][ms[[i]]>0][5] == aligned[[i]][aligned[[i]]>0][9]
ms[[i]][ms[[i]]>0][5] - aligned[[i]][aligned[[i]]>0][9]
ms[[i]][ms[[i]]>0][5] - 17.42
17.42 - aligned[[i]][aligned[[i]]>0][9]
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices <- list()
i <- 6
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
aligned[[i]]
shifts
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
shifts
shifts -0.01
shifts[6]
shifts[6] == 0.01
aligned <- as.list(round(rt[,2:ncol(rt)],2))
aligned[[6]]
shifts[6]
shifts[6]
aligned[[6]]
i <- 6
aligned[[i]][aligned[[i]] > 0] <- aligned[[i]][aligned[[i]] > 0] - shifts[i]
aligned[[6]]
round(aligned[[6]],digits = 2)
aligned$BBIM01
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
error_rate(GCalignObject = results_bbim[[1]][[1]],Reference = "ottensmann-stoffel-hoffman/Supplementary-A/data/bbim_ms.txt")
indices <- list()
i <-6
indices <- append(indices,list(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0])))
t1 <- length(which(aligned[[i]][aligned[[i]] > 0] %in% ms[[i]][ms[[i]] > 0]))
t2 <- length(ms[[i]][!is.na(ms[[i]]) & ms[[i]] > 0])
debugSource('~/GitHub/GCalignR_paper/ottensmann-stoffel-hoffman/Supplementary-A/Supplementary-A/R/error_rate.R')
library(knitr)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>",cache = FALSE,
fig.width = 7, fig.height = 7) # warning = FALSE
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
library(GCalignR)
library(plot3D)
## Datasets have been saved previously by running the code chunk above
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]],p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]],error_rate,"data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]],p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]],error_rate,"data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]],p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]],error_rate,"data/bfla_ms.txt"))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 3,
zlim = c(0,0.3)))
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
scatter3D(
x = errors_bbim[["p2p"]],
y = errors_bbim[["p2m"]],
z = errors_bbim[["error"]],
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.3)))
