main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.4,0.5,0.45))
## plotting
with(errors_bbim,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.4,0.5,0.45))
## plotting
with(errors_bbim,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.25,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.25,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.25,
cex.lab = 1.15,
cex.axis = 1.15,
cex.main = 2,
zlim = c(0,0.2)))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
with (errors_bbim,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
## Set up the margins
par(mfrow = c(1,3),family = "serif", mai = c(0.1,0.3,0.5,0.15))
## plotting
with(errors_bbim,scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus bimaculatus\nn = 717",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_beph, scatter3D(
x = p2p,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus ephippiatus\nn = 782",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
with(errors_bfla, scatter3D(
x = p2p ,
y = p2m,
z = error,
pch = 19,
size = 2,
theta = 30,
phi = 0,
ticktype = "detailed",
main = "Bombus flavifrons\nn = 457",
xlab = "min_diff_peak2peak",
ylab = "max_diff_peak2mean",
zlab = "Error rate",
bty = "g",
colkey = FALSE,
cex = 1.5,
cex.lab = 1.25,
cex.axis = 1.25,
cex.main = 2,
zlim = c(0,0.2)))
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = ">",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 60)
library(GCalignR)
library(ggplot2)
library(plot3D)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
## Load data
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]],
p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]],
error_rate,"data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]],
p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]],
error_rate,"data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]],
p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]],
error_rate,"data/bfla_ms.txt"))
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = ">",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 60)
library(GCalignR)
library(ggplot2)
library(plot3D)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
knitr::include_graphics("figures/parameter_space.png",dpi = 300)
knitr::include_graphics("figures/parameter_space.png",dpi = 300)
knitr::include_graphics("figures/parameter_space.png")
knitr::include_graphics("figures/parameter_space.png")
?knitr::include_graphics
knitr::include_graphics("figures/parameter_space.png")
?knitr
browseVignettes("knitr")
browseVignettes("knitr")
knitr::include_graphics("figures/parameter_space.png")
knitr::include_graphics("figures/parameter_space.png")
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = ">",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 85)
library(GCalignR)
library(ggplot2)
library(plot3D)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
knitr::include_graphics("figures/parameter_space.png")
## combine estimates in a data frame
df <- data.frame(p2p = errors_bbim[["p2p"]],
p2m = errors_bbim[["p2m"]],
bbim = errors_bbim[["error"]],
beph = errors_beph[["error"]],
bfla = errors_bfla[["error"]])
## calculate mean error rates
df[["mean"]] <- apply(df[,3:5],1,mean)
head(df)
## best mean parameters
df[which(df[["mean"]] == min(df[["mean"]])),]
## combine estimates in a data frame
df <- data.frame(p2p = errors_bbim[["p2p"]],
p2m = errors_bbim[["p2m"]],
bbim = errors_bbim[["error"]],
beph = errors_beph[["error"]],
bfla = errors_bfla[["error"]])
## calculate mean error rates
df[["mean"]] <- apply(df[,3:5],1,mean)
## best mean parameters
df[which(df[["mean"]] == min(df[["mean"]])),]
df[which(df[["mean"]] == min(df[["mean"]])),]
sort(df,by = "mean")
sort(df,by = mean)
sort(df)
sort(df$mean)
head(df[sort(df[["mean"]]),])
head(df[,sort(df[["mean"]])])
head(df[sort(df[["mean"]])])
head(df[order(df[["mean"]]),])
head(df[order(df[["mean"]]),],n = 10)
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 14) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
library(GCalignR)
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 14) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
library(ggplot2)
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 14) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
plot
knitr::include_graphics("figures/noise_simulation.tif")
library(knitr)
knitr::opts_chunk$set(cache = FALSE, fig.width = 7, fig.height = 7,tidy = TRUE,highlight = TRUE,comment = "#>",strip.white = TRUE,collapse = TRUE,tidy = TRUE)
options(width = 55)
library(GCalignR)
library(ggplot2)
library(plot3D)
## small function to test parameters in align_chromatograms
source("R/optimal_params.R")
## calculates errors by matching aligned data to a table of known substances
source("R/error_rate.R")
## custom function for simulations based on chromatograms
source("R/ChromaSimFunctions.R")
## Load data
load("data/results_bbim.RData")
load("data/results_beph.RData")
load("data/results_bfla.RData")
errors_bbim <- data.frame(p2p = results_bbim[[2]][["p2p"]], p2m = results_bbim[[2]][["p2m"]])
errors_bbim[["error"]] <- unlist(lapply(X = results_bbim[[1]], error_rate,"data/bbim_ms.txt"))
errors_beph <- data.frame(p2p = results_beph[[2]][["p2p"]], p2m = results_beph[[2]][["p2m"]])
errors_beph[["error"]] <- unlist(lapply(X = results_beph[[1]], error_rate,"data/beph_ms.txt"))
errors_bfla <- data.frame(p2p = results_bfla[[2]][["p2p"]], p2m = results_bfla[[2]][["p2m"]])
errors_bfla[["error"]] <- unlist(lapply(X = results_bfla[[1]], error_rate,"data/bfla_ms.txt"))
knitr::include_graphics("figures/parameter_space.png")
## combine estimates in a data frame
df <- data.frame(p2p = errors_bbim[["p2p"]],
p2m = errors_bbim[["p2m"]],
bbim = errors_bbim[["error"]],
beph = errors_beph[["error"]],
bfla = errors_bfla[["error"]])
## calculate mean error rates
df[["mean"]] <- apply(df[,3:5],1,mean)
## 10 best parameter combinations
head(df[order(df[["mean"]]),],n = 10)
load("data/df.RData")
plot <- ggplot2::ggplot(data = df,aes(x = noise, y = error, group = id, col = id)) +
geom_smooth(level = 0.95) +
theme_bw(base_size = 14) +
theme(aspect.ratio = 1) +
xlab("Additional noise level") +
ylab("Error rate") +
scale_x_continuous(breaks = seq(0,1,0.1)) +
scale_y_continuous(breaks = seq(0,0.3,0.02)) +
scale_colour_manual(values = c("#1B9E77", "#D95F02", "#7570B3"),
name = "",
breaks = c("bbim", "beph", "bfla"),
labels = c("Bombus bimaculatus",
"B. ephippiatus",
"B. flavifrons"),
guide = guide_legend(
label.theme = element_text(
face = "italic", angle = 0,
size = 11)))
knitr::include_graphics("figures/noise_simulation.tif")
