{
    "collab_server" : "",
    "contents" : "---\ntitle: \"GCalignR step by step\"\nauthor: \"Martin A. Stoffel, Meinolf Ottensmann, Joseph Hoffman\"\ndate: \"`r Sys.Date()`\"\noutput: rmarkdown::html_vignette\nbibliography: bibliography.bib\nvignette: >\n    %\\VignetteIndexEntry{GCalignR step by step}\n    %\\VignetteEngine{knitr::rmarkdown}\n    %\\VignetteEncoding{UTF-8}\n---\n\n```{r, echo = FALSE}\nlibrary(knitr)\nknitr::opts_chunk$set(collapse = TRUE, comment = \"#>\", cache = FALSE,\n    fig.width = 5, fig.height = 4) # warning = FALSE\n```\n\n## Introduction\n\nMetabolomics approaches such as Gas Chromatography (GC) and Gas Chromatography-Mass Spectrometry (GC-MS) are increasingly used\nby biologists to unravel the chemical basis of animal olfactory communication (citations). For the detection of broader patterns in chemical samples most researchers use an untargeted approach and analyse the whole spectrum of sampled chemicals rather than targeting specific compounds. However, \nchromatography data across multiple samples are not directly comparable as the retention times of peaks\nvary across samples due to subtle, random and often unavoidable variation of the GC-MS machine parameters [@pierce2005classification]. For studies that seek to identify chemical patterns across samples it becomes essential to account for these retention time drifts by using an appropriate alignment method.\n\nDespite the existence of automated alignment algorithms [e.g. @smith2006xcms; @stein1999integrated; @robinson2007dynamic] (also gcaligner here), most researchers in the relatively young fields of mammalian and avian chemical communication align chromatograms manually [@charpentier2008smelling; @setchell2010odour; @caspers2011scents; @leclaire2012semiochemical; @theis2013symbiotic] or identify all compounds prior to analysis [@whittaker2010songbird] rather than using (semi-)automated alignment software. This approach yields three main drawbacks: (1) For larger sample sizes, the method is time intensive and can take up to several weeks. (2) Humans are prone to detect patterns in noise (some citation) which is why the researcher may bias the alignment due to subjective experience and expectations. (3) The data analytic pipeline from the raw GC data to the results of the statistical analysis is not reproducible. \n\nHere, we introduce `GCalignR`, a package developed in R, which provides a simple means of aligning peaks from Gas Chromatography data and evaluate the quality of the alignment.  `GCalignR` was specifically developed and tested as a preprocessing tool prior to the statistical analysis of chemical samples from animal skin and preen glands [see @stoffel2015chemical for an application of the underlying algorithm]. The alignment functions can easily be embedded in reproducible research tools such as `Rmarkdown` (citation?) and piped as input into\nfurther statistical packages such as `vegan`.\n\n# The package\n\n## Data preprocessing\n\nThe statistical analysis of GC or GC-MS data is usually based on the detection of signal peaks within\nthe chromatograms, which is can be done by proprietary software or free programs such as AMDIS [@stein1999integrated].\nThe peak data of a chromatogramm usually contain the retention time of a given peak plus additional information such \nas the area under the peak or its height which are used in the subsequent analysis. \n`GCalignR` aligns peaks via their retention times (and not their mass-spectra, which may not be available, e.g. when \nusing gas-chromatography coupled to a flame ionization detector (FID)) to align the peaks across individuals for subsequent chemometric analysis and pattern detection .The simple assumption is that peaks with similar retention times\nrepresent the same substances. However, it is highly recommended to verify this assumption by\ncomparing also the mass-spectra (if available) of the substances of interest.\n\n\n```{r} \nlibrary(GCalignR) \n```\n\n\n\n## Input data\n\nThe statistical analysis of GC or GC-MS data is usually based on the detection of signal peaks within\nthe chromatograms, which is can be done by proprietary software or free programs such as AMDIS [@stein1999integrated].\nThe peak data of a chromatogramm usually contain the retention time of a given peak plus additional information such \nas the area under the peak or its height which are used in the subsequent analysis. \n`GCalignR` uses the retention times (and not the mass-spectra, which may not be available, e.g. when \nusing gas-chromatography coupled to a flame ionization detector (FID)) to align the peaks across individuals for subsequent chemometric analysis and pattern detection .The simple assumption is that peaks with similar retention times\nrepresent the same substances. However, it is highly recommended to verify this assumption by\ncomparing also the mass-spectra (if available) of the substances of interest.\n\n## Input file format\n\nThe input file for GCalignR is a .txt file, whereby all elements should be separated by tabs (with\nsep = \"/t\") or any other separator, which has to be specified with the `sep` argument (see\n`?read.table` for a list of separators) :\n\n* The first row contains the individual IDs, whereby every ID must be unique. Optimally, IDs don't\ncontain whitespaces and use the underscore _ as the only special character. \n\n* The second row\ncontains the names of the data columns. For example, if you extracted both the retention time of a\npeak as well as the area under the peak you would write `RT area` into the second line. \n\n* Starting with the third row peak data is included, whereby single samples are concatenated\nhorizontally. Each chromatogram needs to consist of the same number of columns, at least two are\nrequired (e.g. the retention time and the area).\n\n```{r, out.width = 500, fig.retina = NULL, echo = FALSE}\nknitr::include_graphics(\"example.jpg\") \n```\n\nNaturally, not all chromatograms contain the same number of peaks.\n\n```{r, out.width = 500, fig.retina = NULL, echo = FALSE} \nknitr::include_graphics(\"example2.jpg\") \n```\n\n### alternative input from R\n\nAlternative to reading a .txt file, GCalignR also takes input directly from R. Here, `data`\nhas to be a `list` of `data.frames`. Each `list` element (`data.frame`) has the ID of an individual\nand the `data.frame` itself contains the gc-peak data for this individual (again, the minimum\nnumber of columns is one column for the retention time and one column for another variable such as the area under the peak\nor it's height). All column names within `data.frames` have to be the same.\nThe attached dataset `gc_peak_data` contains data from preen secretions of plovers. \n\n```{r} \ndata(\"gc_peak_data\")\nlength(gc_peak_data) # number of individuals\nnames(gc_peak_data) # names of individuals\nhead(gc_peak_data[[1]]) # column names and data\n```\n\n\n## Using align_chromatograms()\n\nThe main function in `GCalignR` is `align_chromatograms()` and this is how it works. \nSee `align_chromatograms` for a detailled description of the arguments.\n\n```{r, results= \"hide\"} \ngc_peak_data_test <- gc_peak_data[1:4] # subset 4 individuals for speed reasons\nout <- align_chromatograms(data = gc_peak_data_test, # usually path to a .txt file\n                           conc_col_name = \"area\", # column name of area under peak variable\n                           rt_col_name = \"RT\", # column name of retention time \n                           rt_cutoff_low = 5, # cut peaks with retention times under 5s\n                           rt_cutoff_high = 45, # cut peaks with retention times above 45 s\n                           reference = \"ind3\", # name of reference chromatogram\n                           max_linear_shift = 0.05, # maximum shift of chromatograms\n                           max_diff_peak2mean = 0.02, # maximum distance of a peak to the mean\n                           min_diff_peak2peak = 0.03, # maximum distance between two (mean) peaks\n                           blanks = NULL, # no blanks. Specify blanks by name (e.g. c(\"blank1\", \"blank2\"))\n                           delete_single_peak = TRUE) # delete substances that are present in just one\n                                                      # individual\n```\n\n## Using gc_heatmap\n\nTo visualise the conducted alignment use `gc_heatmap` to quickly inspect the\naligned peak profiles. By changing function arguments the heatmap can be customized according to your needs.\nA white filling indicates the absence of a peak in a sample, when using the default option of a binary heatmap. \n\n```{r,message=FALSE,fig.width=6,fig.height=6}\ngc_heatmap(out) # By default a threshold of 0.05 is used to mark deviations\n```\n\n## Using norm_peaks\n\n`norm_peaks` is used to normalize the desired measure of concentration on the individual level in order\nto compensate for differences in the baseline concentration of samples. Note that this step is required,\neven if the data already contained a measure of relative abundance, in case that any of retention time cutoffs, single peak deletion or blank peak removal was applied. \n\n```{r,eval=FALSE}\nrel_area <- norm_peaks(aligned)\n````\n\n\n\n# The alignment algorithm\n\nThe Algorithm implemented in the main function `align_chromatograms` follows the following steps:\n\n1. One sample provides the reference peak list, which is used to align all other peak lists\nby means of shifting them to maximise shared peaks with the reference. This step corrects systematic\nshifts in the retention times of chromatograms. The maximum shift can be specified with the\n`max_linear_shift` argument.\n\n2. This step corrects unreliability of individual peak retention times and essentially \ntries to minimise variation within a retention time row. The maximum shift per peak can be specified with the\n`max_diff_peak2mean` argument.\n\n3. In a third step, retention time rows are merged if they have similar retention time means and non\nof the samples shows peaks in both or the rows (with the assumption that these two rows represent a\nsingle substance). The maximum mean difference between two retention time rows can be specified with the\n`min_diff_peak2peak` argument.\n\n\n\n## Literature\n",
    "created" : 1470832792353.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2987087736",
    "id" : "4C0D74C8",
    "lastKnownWriteTime" : 1471941382,
    "last_content_update" : 1471941382747,
    "path" : "~/Dropbox/projects/current/GCalignR/GCalignR_paper/GCalignR_step_by_step.Rmd",
    "project_path" : "GCalignR_step_by_step.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}